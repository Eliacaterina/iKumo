<div class="preview-image-container col-xs-6">
  <h4>CATCHY HEADLINE NEEDED</h4>
  <div id="mosaic"></div>
</div>

  <!-- right side of page should contain login/register -->

<div class="registerContainer col-xs-6">
  <ul class="nav nav-pills nav-justified">
    <li class="active"><a class="sigintab" href="#home" data-toggle="tab">LOG IN</a></li>
    <li><a href="#profile" data-toggle="tab">SIGN UP</a></li>
  </ul>

  <div id="myTabContent" class="tab-content">
    <div class="tab-pane fade active in" id="home">
      <%= form_for(resource, as: resource_name, url: session_path(resource_name), :class => "form-control") do |f| %>

      <div class="form-group">
        <label for="exampleInputEmail1">Email address</label>
        <%= f.email_field :email, autofocus: true, :class => "form-control"%>
      </div>

      <div class="form-group">
        <label for="exampleInputPassword1">Password</label>
          <%= f.password_field :password, autocomplete: "off", :class => "form-control" %>
      </div>

      <div class="form-group">
        <div class="checkbox">
        <label>
          <% if devise_mapping.rememberable? %>
            <%= f.check_box :remember_me, :class => "checkbox" %>
            <a>Remember Me</a>
          <% end %>
        </label>
        </div>
      </div>

      <div class="form-group">
        <%= f.submit "Log in", :class => "btn btn-primary" %>
      </div>
      <% end %>
    </div>

    <div class="tab-pane fade" id="profile">
      <%= form_for(resource, as: resource_name, url: registration_path(resource_name), :class => "form-control") do |f| %>
        <%= devise_error_messages! %>

      <div class="form-group">
        <label for="exampleInputEmail1">Email address</label>
        <%= f.email_field :email, autofocus: true, :class => "form-control"%>
      </div>

      <div class="form-group">
        <label for="exampleInputPassword1">Password</label>
        <% if @validatable %>
        <em>(<%= @minimum_password_length %> characters minimum)</em>
        <% end %><br />
        <%= f.password_field :password, autocomplete: "off", :class => "form-control"%>
      </div>

      <div class="form-group">
        <label for="exampleInputPassword1">Password Confirmation</label>
        <%= f.password_field :password_confirmation, autocomplete: "off", :class => "form-control" %>
      </div>

      <div class="form-group">
          <%= f.submit "Sign up", :class => "btn btn-primary" %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<% content_for :js_after do %>
  <script>
    $(document).ready(function() {
      var width = 320;
      var height = 240;

      count = 0;
      elements = new Array();

      var el = $('#mosaic');

      el.width(width).height(height);

      var horizontal_pieces = 8;
      var vertical_pieces = 6;
      total_pieces = horizontal_pieces * vertical_pieces;

      var box_width = width / horizontal_pieces;
      var box_height = height / vertical_pieces;

      var vertical_position = 0;

      for (i=0; i<total_pieces; i++)
      {
        var tempEl = $('<span class="hover" id="hover-' + i + '"></span>');

        var horizontal_position = (i % horizontal_pieces) * box_width;

        if(i > 0 && i % horizontal_pieces == 0)
        {
          vertical_position += box_height;
        }

        tempEl.css('background-position', '-' + horizontal_position + 'px -' + vertical_position + 'px');

        el.append(tempEl);
        elements.push(tempEl);
      }

      elements = shuffleArray(elements);

      $('#mosaic .hover').width(box_width).height(box_height);

      setInterval(toggleDisplay, 200);
    });

    function toggleDisplay()
    {
      var tempEl = elements[count];
      var opacity = tempEl.css('opacity');

      if(opacity == 0)
      {
        tempEl.animate({ opacity: 1 })
      }
      else
      {
        tempEl.animate({ opacity: 0 })
      }

      count = (count + 1) % total_pieces;
    }

    /*  shuffleArray source: http://stackoverflow.com/questions/2450954/how-to-randomize-a-javascript-array#12646864 */
    function shuffleArray(array) {
        for (var i = array.length - 1; i > 0; i--) {
            var j = Math.floor(Math.random() * (i + 1));
            var temp = array[i];
            array[i] = array[j];
            array[j] = temp;
        }
        return array;
    }
  </script>
<% end %>



